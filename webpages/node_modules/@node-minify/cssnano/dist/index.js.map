{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/*!\n * node-minify\n * Copyright(c) 2011-2024 Rodolphe Stoclin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nimport type { MinifierOptions } from \"@node-minify/types\";\nimport { utils } from \"@node-minify/utils\";\nimport cssnano from \"cssnano\";\nimport postcss from \"postcss\";\n\n/**\n * Run cssnano.\n * @param settings Cssnano options\n * @param content Content to minify\n * @param callback Callback\n * @param index Index of current file in array\n * @returns Minified content\n */\nconst minifyCssnano = async ({\n    settings,\n    content,\n    callback,\n    index,\n}: MinifierOptions) => {\n    let contentMinified = { css: \"\" };\n    try {\n        contentMinified = await postcss([cssnano]).process(content || \"\", {\n            from: undefined,\n        });\n    } catch (e) {\n        if (callback) {\n            return callback(e);\n        }\n    }\n    if (settings && !settings.content && settings.output) {\n        settings.output &&\n            utils.writeFile({\n                file: settings.output,\n                content: contentMinified.css,\n                index,\n            });\n    }\n    if (callback) {\n        return callback(null, contentMinified.css);\n    }\n    return contentMinified.css;\n};\n\n/**\n * Expose `minifyCssnano()`.\n */\nminifyCssnano.default = minifyCssnano;\nexport = minifyCssnano;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAUA,mBAAsB;AACtB,qBAAoB;AACpB,qBAAoB;AAUpB,IAAM,gBAAgB,OAAO;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,MAAuB;AACnB,MAAI,kBAAkB,EAAE,KAAK,GAAG;AAChC,MAAI;AACA,sBAAkB,UAAM,eAAAA,SAAQ,CAAC,eAAAC,OAAO,CAAC,EAAE,QAAQ,WAAW,IAAI;AAAA,MAC9D,MAAM;AAAA,IACV,CAAC;AAAA,EACL,SAAS,GAAG;AACR,QAAI,UAAU;AACV,aAAO,SAAS,CAAC;AAAA,IACrB;AAAA,EACJ;AACA,MAAI,YAAY,CAAC,SAAS,WAAW,SAAS,QAAQ;AAClD,aAAS,UACL,mBAAM,UAAU;AAAA,MACZ,MAAM,SAAS;AAAA,MACf,SAAS,gBAAgB;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACT;AACA,MAAI,UAAU;AACV,WAAO,SAAS,MAAM,gBAAgB,GAAG;AAAA,EAC7C;AACA,SAAO,gBAAgB;AAC3B;AAKA,cAAc,UAAU;AACxB,iBAAS;","names":["postcss","cssnano"]}